{
  "name": "marktex",
  "version": "0.2.9",
  "description": "A full GFM implementation in javascript. Additional smart features supported and enabled by default.",
  "preferGlobal": "true",
  "main": "lib/marktex.js",
  "bin": {
    "marktex": "bin/marktex.js"
  },
  "author": {
    "name": "Harttle"
  },
  "keywords": [
    "markdown",
    "html",
    "smarter"
  ],
  "repository": {
    "type": "git",
    "url": "https://git@github.com:buddys/marktex.git"
  },
  "homepage": "http://buddys.github.io/marktex/",
  "bugs": {
    "url": "https://github.com/buddys/marktex/issues"
  },
  "dependencies": {
    "optimist": "0.5.2"
  },
  "engines": {
    "node": "*"
  },
  "readme": "# marktex\n\nA full GFM implementation in javascript. Additional smart features supported and enabled by default. [Live demo](http://buddys.github.io/marktex/) is available.\n\n> GFM supported, code hilighting, math supporting, task list, smarter list, para alignment.\n\n[![NPM version](https://badge.fury.io/js/marktex.png)](http://badge.fury.io/js/marktex)\n\n## Install\n\n``` bash\nnpm install marktex\n```\n\n## Usage\n\nMinimal usage:\n\n```js\nconsole.log(marktex('**markdown** is wonderful'));\n//output: <p><strong>markdown</strong> is wonderful</p>\n```\n\nOptions and callback:\n\n```js\nvar options = {\n  gfm: true,\n  marktex: true\n};\n\nmarktex('**markdown** is wonderful', options, function (err, content) {\n  if (err) throw err;\n  console.log(content);\n});\n```\n\n## marktex(markdownString, [options], [callback])\n\n### markdownString\n\nMarkdown string to be parsed.\n\n### options\n\nType: `Object`\n\nOption object for marktex.\n\n### callback\n\nType: `Function`\n\nCallback function with error-string as the first arg, parsed-content as the second arg.\n\n## Options\n\n### gfm\n\nType: `Boolean`\nDefault: `true`\n\nEnable [GitHub flavored markdown](https://help.github.com/articles/github-flavored-markdown).\n\n### tables\n\nType: `Boolean`\nDefault: `true`\n\nEnable GFM tables. Requires the `gfm` option to be true.\n\n### todo\n\nType: `Boolean`\nDefault: `true`\n\nEnable GFM todo. Requires the `gfm` option to be true.\n\n### highlight\n\nType: `Function` Default: `null` Return: `string` \n\nHighlight interface, used for highlight code blocks. Takes language specification and code string, returns html. Requires the `gfm` option to be true.\n\n```js\noptions = {\n    highlight: function(codeString, language){ return highlight(lang, code).value; }\n}\n```\n\n### breaks\n\nType: `Boolean`\nDefault: `true`\n\nEnable GFM line breaks. Requires the `gfm` option to be true.\n\n### marktex\n\nType: `Boolean`\nDefault: `true`\n\nEnable [MarkTex](http://buddys.github.io/marktex/), features include task-list, math interface, para-alignment, smarter list ,etc.\n\n### math\n\nType: `Function` Default: `null` Return: `string` \n\nMath interface, used for rendering math code. Takes math code, isInline and language, returns html. Requires the `marktex` option to be true.\n\n```js\n//sample\noptions = {\n    math: function(mathString, isInline, language){\n            return isInline ? '<span class=\"mathjax\">\\\\('+mathString+'\\\\)</span>'\n            :'<div class=\"mathjax\">\\\\['+mathString+'\\\\]</div>';\n            }\n}\n```\n\n### smartlist\n\nType: `Boolean`\nDefault: `false`\n\nSmarter list rendering. Different symbol in unsorted list, and consecutive `\\n` in all list, will split lists. Requires the `marktex` option to be true.\n\n### smartquote\n\nType: `Boolean`\nDefault: `true`\n\nSmarter blockquote rendering. Consecutive `\\n` will split blockquote. Requires the `marktex` option to be true.\n\n\n### align\n\nType: `Boolean`\nDefault: `true`\n\nEnable paragraph alignment. Requires the `marktex` option to be true.\n\n### pedantic\n\nType: `Boolean`\nDefault: `false`\n\nConform to original markdown, do not fix any of bugs or poor behavior.\n\n### sanitize\n\nType: `Boolean`\nDefault: `false`\n\nIgnore any HTML that has been input.\n\n### smartypants\n\nType: `Boolean`\nDefault: `false`\n\nUse \"smart\" typograhic punctuation for things like quotes and dashes.\n\n### renderer\n\nType: `Renderer`\nDefault: `new Renderer()`\n\nA renderer instance for rendering ast to html. Learn more on the Renderer\nsection.\n\n\n## Parser API\n\n### Renderer\n\nRenderer renders tokens to html.\n\n```javascript\nvar r = new marktex.Renderer()\nr.code = function(code, lang) {\n  return highlight(lang, code).value;\n}\n\nconsole.log(marktex(text, {renderer: r}))\n```\n\n#### Block Level Renderer\n\n- code(code, language)\n- math(math, language)\n- blockquote(quote)\n- html(html)\n- heading(text, level)\n- hr()\n- list(body, ordered)\n- listitem(text)\n- todo(body)\n- todoitem(text, checked)\n- paragraph(text)\n- aligned_paragraph(text, alignment)\n- table(header, body)\n- tablerow(content)\n- tablecell(content, flags)\n\n`alignment` could be:\n\n```\n{\n\talign: 'center',\n\tindent: '2em'\n}\n```\n\n`flags` could be:\n\n```\n{\n    header: true,\n    align: 'center'\n}\n```\n\n#### Span Level Renderer\n\n- strong(text)\n- em(text)\n- codespan(code)\n- mathspan(math)\n- br()\n- del(text)\n- link(href, title, text)\n- image(href, title, text)\n\n### Lexer\n\nLexer produces tokens from markdown text input.\n\n``` js\nvar options={};\nvar lexer = new marktex.BlockLexer(options);\nvar tokens = lexer.lex(text);\nconsole.log(tokens);\nconsole.log(lexer.rules);\n```\n\n### Parser\n\nParser reads markdown text, outputs html. Renders and lexers can be customed within a parser.\n\n``` js\nvar renderer = new marktex.Renderer();\n\nrenderer.heading = function(text, level) {\n  return '<div class=\"h-' + level + '\">' + text + '</div>'\n}\n\nvar parse = function(src, options) {\n  options = options || {};\n  return marktex.parse(marktex.blockLex(src, options), options);\n}\n\nconsole.log(parse('# h1', {renderer: renderer}))\n```\n\n## Thanks\n\nA lot thanks to [marked](https://github.com/chjj/marked) implemented by Jeffrey. Marktex is developed based on marked.\n",
  "readmeFilename": "README.md",
  "_id": "marktex@0.2.9",
  "dist": {
    "shasum": "abe52ddee5787d2cfc8139096640883dd7b81ec2"
  },
  "_from": "marktex@0.2.9",
  "_resolved": "https://registry.npmjs.org/marktex/-/marktex-0.2.9.tgz"
}
